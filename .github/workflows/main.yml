name: Build macOS app

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Detect Python file
        id: detect_py
        run: |
          # Pak de eerste .py file in de repo root (pas eventueel aan als je subfolders hebt)
          FILE=$(find . -maxdepth 1 -name "*.py" | head -n 1)
          BASENAME=$(basename "$FILE" .py)
          echo "PY_FILE=$FILE" >> $GITHUB_OUTPUT
          echo "BASENAME=$BASENAME" >> $GITHUB_OUTPUT

      - name: Install pipreqs and generate requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install pipreqs
          pipreqs . --force

      - name: Install dependencies from requirements.txt
        run: |
          pip install -r requirements.txt

      - name: Build .app bundle with PyInstaller
        run: |
          pip install pyinstaller
          pyinstaller --windowed --name ${{ steps.detect_py.outputs.BASENAME }} ${{ steps.detect_py.outputs.PY_FILE }}

      - name: Create DMG from .app
        run: |
          hdiutil create -volname "${{ steps.detect_py.outputs.BASENAME }}" -srcfolder "dist/${{ steps.detect_py.outputs.BASENAME }}.app" -ov -format UDZO "${{ steps.detect_py.outputs.BASENAME }}.dmg"

      - name: Upload .app artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.detect_py.outputs.BASENAME }}-app
          path: dist/${{ steps.detect_py.outputs.BASENAME }}.app

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.detect_py.outputs.BASENAME }}-dmg
          path: ${{ steps.detect_py.outputs.BASENAME }}.dmg
